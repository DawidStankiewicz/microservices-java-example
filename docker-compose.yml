version: "3.9"
services:
  configuration-server:
    build: ./configuration-server/
    ports:
      - "8888:8888"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
  discovery-service:
    build: ./discovery-service/
    depends_on:
      - configuration-server
    ports:
      - "8761:8761"
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
  gateway-server:
    build: ./gateway-server/
    depends_on:
      configuration-server:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    ports:
      - "8072:8072"
    restart: always
  results-service:
    build: ./results-service/
    depends_on:
      configuration-server:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
  pool-service:
    build: ./pool-service/
    depends_on:
      postgres:
        condition: service_healthy
      configuration-server:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8072/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
  postgres:
    image: postgres:16.4
    restart: always
    environment:
      - 'POSTGRES_DB=pool'
      - 'POSTGRES_PASSWORD=pgadmin'
      - 'POSTGRES_USER=pool'
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U pool -d pool" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
  #    volumes:
  #      - "./<your_sql_file_name_here>.sql:/docker-entrypoint-initdb.d/1.sql"