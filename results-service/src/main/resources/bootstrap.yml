spring:
  application:
    name: results-service
  profiles:
    active: default
  cloud:
    config:
      uri: http://localhost:8888
      enabled: true
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
resilience4j.circuitbreaker:
  instances:
    pool-service:
      register-health-indicator: true
      failure-rate-threshold: 50
      slow-call-rate-threshold: 75
      slow-call-duration-threshold: 10s
      permitted-number-of-calls-in-half-open-state: 3
      sliding-window-size: 5
      minimum-number-of-calls: 5
      wait-duration-in-open-state: 10s
    results-service:
      register-health-indicator: true
      failure-rate-threshold: 50
      slow-call-rate-threshold: 75
      slow-call-duration-threshold: 10s
      permitted-number-of-calls-in-half-open-state: 3
      sliding-window-size: 5
      minimum-number-of-calls: 5
      wait-duration-in-open-state: 10s
  configs:
    default:
      register-health-indicator: true
resilience4j.bulkhead:
  instances:
    pool-service:
      max-concurrent-calls: 25
      max-wait-duration: 0
resilience4j:
  thread-pool-bulkhead:
    instances:
      pool-service:
        max-thread-pool-size: 10
        core-thread-pool-size: 10
        queue-capacity: 10
        keep-alive-duration: 20ms
  retry:
    instances:
      pool-service:
        max-attempts: 5
        wait-duration: 500ms
        retry-exceptions:
          - java.util.concurrent.TimeoutException
  ratelimiter:
    instances:
      pool-service:
        timeout-duration: 5000ms
        limit-refresh-period: 500ns
        limit-for-period: 50


management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    env:
      enabled: true
    health:
      show-details: always

logging:
  level:
    org.springframework.web: DEBUG
    com: DEBUG
    dev.stankiewicz: DEBUG

